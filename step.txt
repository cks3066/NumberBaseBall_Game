//　파이프　생성
    //　버퍼　생성　［읽기　쓰기용］

    // 로그인　시스템
    // 아이디　입력
    // 입력된　아이디　파이프를　통해　서버에　전달
    // 서버에　저장된　구조체에서　확인
    // 비밀번호도　이런식으로　확인
    
    // 로그인　성공시

    // switch문을　통해　메인메뉴　오픈
    // 스위치문에　해당하는　각각　함수　생성
    // 입력받은　값과　함수　연결

    // 게임　시작시
    
    // 간단한　방법
        // 클라이언트에서　생성된　난수를　바탕으로
        // 클라이언트에서　게임　진행
        // 게임　결과만　서버에　전달
        // or
        // 서버에서　생선된　난수를　클라이언트에　전달
        // 전달된　난수를　바탕으로　클라이언트에서　게임진행
        // 게임　결과　서버에　전달

    // 복잡한　방법
        // 서버에서　생성된　난수 or 클라이언트의　난수　전달
        // 난수를　바탕으로　서버에서　게임　진행
        // 클라이언트의　입력마다　서버에서　계산　후
        // 서버에서　출력값　전달
        // 서버에서　진행된　게임　결과　그대로　저장
        // 게임　종료　상황　클라이언트에　전달
    
    // 랭킹　확인
        // 게임　종료시마다　전적을　유저　구조체에　저장
        // 저장된　구조체를　검사하며
        // 랭킹　출력

    // 도움말，　게임방법，　채팅　기능　등　구현　가능

use signal(SIGINT, signalHandler)

do not use STDOUT file descriptor to send & receive data
then, just use write() and read() to get and push buffer
